=============
Catalog Tests
=============

    >>> from zope import interface, component
    >>> from zope.interface.verify import verifyObject, verifyClass
    >>> from zope.app.component.hooks import setSite
    >>> from zope.app.folder.folder import Folder
    >>> from zope.app.security.interfaces import IAuthentication
    >>> from zope.security.management import newInteraction, endInteraction

    >>> from zojax.activity.catalog import ActivityCatalog
    >>> from zojax.activity.tests.comment import CommentActivityRecord
    >>> from zojax.activity.interfaces import IActivity, IActivityCatalog, IActivityAware

    >>> root = getRootFolder()
    >>> setSite(root)
    >>> sm = root.getSiteManager()

    >>> folder = Folder()
    >>> root['folder'] = folder
    >>> folder1 = Folder()
    >>> root['folder']['folder1'] = folder1
    >>> folder2 = Folder()
    >>> root['folder']['folder2'] = folder2

    >>> configlet = sm.getUtility(IActivity)
    >>> verifyObject(IActivity, configlet)
    True

    >>> class Participation:
    ...     interaction = None
    ...     def __init__(self, principal):
    ...         self.principal = principal

    >>> auth = sm.getUtility(IAuthentication)

    >>> endInteraction()
    >>> newInteraction(Participation(auth.getPrincipal('zope.mgr')))

    >>> interface.classImplements(Folder, IActivityAware)
    >>> record = CommentActivityRecord(principal='zope.mgr', value='test')
    >>> configlet.add(folder1, record)


Catalog
-------

    >>> activity = sm.getUtility(IActivity)
    >>> catalog = activity.catalog

    >>> verifyClass(IActivityCatalog, ActivityCatalog)
    True

    >>> verifyObject(IActivityCatalog, catalog)
    True

    >>> isinstance(catalog, ActivityCatalog)
    True

    >>> for index in catalog.getIndexes():
    ...     print index.__name__, index
    allowedUsers <zc.catalog.catalogindex.SetIndex ...>
    contexts <zc.catalog.catalogindex.SetIndex ...>
    date <zc.catalog.catalogindex.NormalizationWrapper ...>
    object <zc.catalog.catalogindex.ValueIndex ...>
    principal <zc.catalog.catalogindex.ValueIndex ...>
    type <zc.catalog.catalogindex.ValueIndex ...>

    >>> catalog.updateIndex(catalog.getIndex('date'))
    >>> catalog.updateIndexes()

index
-----

    >>> class GetName(object):
    ...     def __init__(self, record, default=None):
    ...         self.value = record.object.__name__

    >>> from zc.catalog.catalogindex import ValueIndex
    >>> from zojax.catalog.interfaces import ICatalogIndexFactory

    >>> class NameIndex(object):
    ...     component.adapts(IActivityCatalog)
    ...     interface.implements(ICatalogIndexFactory)
    ...     
    ...     def __init__(self, catalog):
    ...         pass
    ...     
    ...     def __call__(self):
    ...         return ValueIndex('value', GetName)

    >>> sm.registerAdapter(NameIndex, name='name')

    >>> for index in catalog.getIndexes():
    ...     print index.__name__, index
    allowedUsers <zc.catalog.catalogindex.SetIndex ...>
    contexts <zc.catalog.catalogindex.SetIndex ...>
    date <zc.catalog.catalogindex.NormalizationWrapper ...>
    object <zc.catalog.catalogindex.ValueIndex ...>
    principal <zc.catalog.catalogindex.ValueIndex ...>
    type <zc.catalog.catalogindex.ValueIndex ...>
    name <zc.catalog.catalogindex.ValueIndex ...>

    >>> catalog.clear()

cleanup

    >>> endInteraction()
    >>> setSite(None)